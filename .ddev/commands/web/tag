#!/usr/bin/env bash

## Description: Tags a version of Drupal CMS and updates version constraints.
## Usage: tag VERSION
## Example: "ddev tag 1.2.3"
## Example: "ddev tag 1.2.3 test"

# Abort this script if any one step fails.
set -e

VERSION=$1
if [ -z "$VERSION" ]; then
  echo "You need to give me a version number."
  exit 1
fi

# Create the cPanel project template.
rm -r -f cpanel_template
cp -R -f project_template cpanel_template
cd cpanel_template
sed -i 's/"web\//"\.\//g' composer.json
sed -i 's/ --docroot=web//' README.md
composer config name drupal/cms_cpanel
# Don't include Drush, since its binary would be placed in the web root. We
# assume that people using the cPanel project template and also want to use
# Drush will have the know-how to add it to their dependencies.
composer remove --dev --no-update drush/drush
mv web/* .
rm -r web
cd ..

COMPONENTS=$(find $PWD -maxdepth 2 -type d -name 'drupal_cms_*' -or -name '*_template')

# Set all components' versions explicitly.
for dir in $COMPONENTS; do
  composer config version $VERSION --working-dir=$dir
done

# Stage all changes, but if we're just testing this script, don't actually commit
# or tag anything.
git add $COMPONENTS
if [[ $2 == "test" ]]; then
  exit 0
fi

# Tag it!
git commit --message=$VERSION
git tag $VERSION

# Put this branch back into its pre-tagged state.
git revert HEAD --no-commit
git commit --all --message="Back to dev."
